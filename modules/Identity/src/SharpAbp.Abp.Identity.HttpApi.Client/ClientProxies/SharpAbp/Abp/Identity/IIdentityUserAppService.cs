// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using SharpAbp.Abp.Identity;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Identity;

// ReSharper disable once CheckNamespace
namespace SharpAbp.Abp.Identity;

public interface IIdentityUserAppService : IApplicationService
{
    Task<IdentityUserDto> GetAsync(Guid id);

    Task<IdentityUserDto> FindByUsernameAsync(string userName);

    Task<IdentityUserDto> FindByEmailAsync(string email);

    Task<PagedResultDto<IdentityUserDto>> GetListAsync(GetIdentityUsersInput input);

    Task<List<IdentityClaimTypeDto>> GetAllClaimTypesAsync();

    Task<ListResultDto<IdentityRoleDto>> GetRolesAsync(Guid id);

    Task<ListResultDto<IdentityRoleDto>> GetAssignableRolesAsync();

    Task<List<OrganizationUnitDto>> GetOrganizationUnitsAsync(Guid id);

    Task<ListResultDto<OrganizationUnitDto>> GetAvailableOrganizationUnitsAsync();

    Task<List<IdentityUserClaimDto>> GetClaimsAsync(Guid id);

    Task<IdentityUserDto> CreateAsync(NewIdentityUserCreateDto input);

    Task<IdentityUserDto> UpdateAsync(Guid id, NewIdentityUserUpdateDto input);

    Task DeleteAsync(Guid id);

    Task UpdateRolesAsync(Guid id, IdentityUserUpdateRolesDto input);

    Task UpdateClaimsAsync(Guid id, List<CreateOrUpdateIdentityUserClaimDto> identityUserClaims);

    Task LockAsync(Guid id, int seconds);

    Task UnLockAsync(Guid id);

    Task SetPasswordAsync(Guid id, SetPasswordDto input);

    Task<bool> TwoFactorEnableAsync(Guid id);

    Task SetTwoFactorAsync(Guid id, bool enabled);
}
